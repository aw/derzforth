GD32VF103[CBT6] (Longan Nano, Wio Lite)
---------------------------------------

Linker snippet based on:
https://github.com/riscv-mcu/GD32VF103_Firmware_Library/blob/master/Firmware/RISCV/env_Eclipse/GD32VF103xB.lds

MEMORY
{
    flash (RX)  : ORIGIN = 0x08000000, LENGTH = 128K
    ram   (RWX) : ORIGIN = 0x20000000, LENGTH = 32K
}

Summary:
Flash: 128K starting at 0x0800_0000: read, executable
RAM:    32K starting at 0x2000_0000: read, write, executable

Boot Process:
The default is to boot from main flash which starts at 0x0800_0000.

LEDs:
Explanation of why the GPIO pin needs to be low for an LED to be on:
https://www.raspberrypi.org/forums/viewtopic.php?t=234598

Delay (https://en.bbs.sipeed.com/t/topic/1759/10):
mtime lo: 0xD100_0000
mtime hi: 0xD100_0004

RISC-V privileged ISA describes the "mtime" feature. The GD32VF103 supports
this but the docs are weird about it. They still refer to it as "SysTick"
which is an ARM thing (though similar). Online, the folks note that this
feature is memory mapped at 0xD100_0000. The low 32 bits are at 0xD100_0000
and the high 32 bits are at 0xD100_0004.

The folks also mention that the timer _seems_ to increment at 2MHz. The user
manual states (on page 63) that: "The RISCV System Timer (SysTick) external
clock is clocked with the AHB clock (HCLK) divided by 4". This leads me to
believe that the Longan Nano's _default_ clock freqency must be 8MHz.

On page 65 of the user manual: "The internal 8M RC oscillator, IRC8M, has a
fixed frequency of 8 MHz and is the default clock source selection for the CPU
when the device is powered up". So there we go! By default, the Longan Nano
operates at 8MHz though this frequency (aka clock source and divider) can be
modified. Therefore, the RISC-V "mtime" register gets incremented at 8MHz / 4
which is 2MHz.

At that rate, the lower 32 bits of "mtime" will rollover once every 35.79
minutes. The entire 64-bits of "mtime" will rollover once every 292,471 years.
Woof. The "algorithm" that the example firmware seems to use for grabbing the
mtime value is this: grab "hi" and "lo". If "hi" is matches it's "mtime"
value, then do the left-shift-or and return the uint64. Else just try again.

More on the system clock (page 66): "After the system reset, the default CK_SYS
source will be IRC8M and can be switched to HXTAL or CK_PLL by changing the
System Clock Switch bits, SCS, in the Clock configuration register 0,
RCU_CFG0."



FE310-G002 (HiFive1 Rev B)
--------------------------

Linker snippet based on:
https://github.com/sifive/freedom-e-sdk/blob/master/bsp/sifive-hifive1-revb/metal.default.lds

MEMORY
{
    flash (RX)  : ORIGIN = 0x20000000, LENGTH = 4M
    ram   (RWX) : ORIGIN = 0x80000000, LENGTH = 16K
}

Summary:
Flash:  4M starting at 0x2000_0000: read, executable
RAM:   16K starting at 0x8000_0000: read, write, executable

Boot Process:
The first 64K of Flash is occupied by the bootloader (which jumps to 0x2001_0000 at the end).
That leaves (4M - 64K = 4032K) starting at 0x2001_0000 for my program.

Delay:
mtime lo: 0x0200_BFF8
mtime hi: 0x0200_BFFC
